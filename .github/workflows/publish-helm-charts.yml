name: Publish Helm Charts to Docker Hub (OCI)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - 'infrastructure/helm/**'
      - '.github/workflows/publish-helm-charts.yml'
  release:
    types: [published]

permissions:
  contents: read

env:
  OCI_REGISTRY: registry-1.docker.io
  DH_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
  DH_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Determine chart version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Use the release tag (strip leading 'v' if present)
            VERSION="${GITHUB_REF_NAME#v}"
          else
            # Use base version + short SHA
            BASE="0.1.0"
            SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
            VERSION="${BASE}-${SHORT_SHA}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Helm registry login (Docker Hub)
        run: |
          echo "$DH_TOKEN" | helm registry login $OCI_REGISTRY -u "$DH_USER" --password-stdin

      - name: Package and push deviceregapi chart
        working-directory: infrastructure/helm/deviceregapi
        run: |
          helm package . --version "${{ steps.ver.outputs.version }}"
          helm push deviceregapi-${{ steps.ver.outputs.version }}.tgz oci://$OCI_REGISTRY/$DH_USER

      - name: Package and push statisticsapi chart
        working-directory: infrastructure/helm/statisticsapi
        run: |
          helm package . --version "${{ steps.ver.outputs.version }}"
          helm push statisticsapi-${{ steps.ver.outputs.version }}.tgz oci://$OCI_REGISTRY/$DH_USER

      - name: Package and push umbrella (lbsite) chart
        working-directory: infrastructure/helm/lbsite
        run: |
          # Vendor local dependencies into charts/ so the umbrella is self-contained
          helm dependency build || true
          helm package . --version "${{ steps.ver.outputs.version }}"
          helm push lbsite-${{ steps.ver.outputs.version }}.tgz oci://$OCI_REGISTRY/$DH_USER
