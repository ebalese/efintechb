name: DeviceRegistrationAPI CI

on:
  push:
    branches:
      - 'main'
    paths:
      - 'application/lbsite/DeviceRegistrationAPI/**'
      - '.github/workflows/device-registration-api-ci.yml'
      - 'infrastructure/helm/**'
  pull_request:
    paths:
      - 'application/lbsite/DeviceRegistrationAPI/**'
      - '.github/workflows/device-registration-api-ci.yml'
      - 'infrastructure/helm/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: application/lbsite/DeviceRegistrationAPI

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Run unit tests
        run: mvn -B test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: device-registration-api-test-reports
          path: |
            application/lbsite/DeviceRegistrationAPI/target/surefire-reports/**
            application/lbsite/DeviceRegistrationAPI/target/failsafe-reports/**
          if-no-files-found: warn

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: application/lbsite/DeviceRegistrationAPI

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven (package)
        run: mvn -B -DskipTests package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: device-registration-api-jar
          path: application/lbsite/DeviceRegistrationAPI/target/*.jar
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: application/lbsite/DeviceRegistrationAPI

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME  }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN  }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/device-registration-api
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: application/lbsite/DeviceRegistrationAPI
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Determine chart version
        id: ver
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "version=0.1.0-${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Helm registry login (Docker Hub)
        env:
          DH_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
          DH_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          echo "$DH_TOKEN" | helm registry login registry-1.docker.io -u "$DH_USER" --password-stdin

      - name: Package and push deviceregapi chart
        working-directory: infrastructure/helm/deviceregapi
        run: |
          helm package . --version "${{ steps.ver.outputs.version }}"
          helm push deviceregapi-${{ steps.ver.outputs.version }}.tgz oci://registry-1.docker.io/${{ secrets.DOCKER_HUB_USERNAME }}
